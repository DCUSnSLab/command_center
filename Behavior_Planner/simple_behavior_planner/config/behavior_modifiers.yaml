/**:
  ros__parameters:
    # 행동별 파라미터 수정자 설정
    # Baseline은 smppi_params.yaml에서 로드하고, 여기서는 multiplier/override만 정의
    
    behavior_modifiers:
      1:  # 전진 (기본값 사용)
        description: "Normal forward movement"
        multipliers: {}  # 모든 값 1.0 (기본값 사용)
        overrides: {}
        
      2:  # 후진
        description: "Reverse movement"
        multipliers:
          goal_weight: 1.7              # 170% (더 정확하게)
          xy_goal_tolerance: 0.5        # 50% (더 엄격하게)
          lookahead_base_distance: 0.6  # 60% (짧게)
        overrides:
          max_linear_velocity: 0.0      # 전진 속도 0
          min_linear_velocity: -1.0     # 후진 속도 -1.5 m/s
          respect_reverse_heading: true
          
      3:  # 전진 정밀 pose tracking  
        description: "Precise forward tracking"
        multipliers:
          max_linear_velocity: 0.66     # 33% (느리게)
          goal_weight: 2.5              # 250% (매우 정확하게)
          lookahead_base_distance: 0.6  # 60% (짧게)
          xy_goal_tolerance: 0.4        # 40% (엄격하게)
          goal_reached_threshold: 0.5   # 50% (더 정밀한 도달 판정)
        overrides:
          min_linear_velocity: 0.0
          
      4:  # 후진 정밀 pose tracking
        description: "Precise reverse tracking"
        multipliers:
          goal_weight: 3.0              # 300% (매우 정확하게)
          xy_goal_tolerance: 0.3        # 30% (매우 엄격하게)
          lookahead_base_distance: 0.5  # 50% (매우 짧게)
          goal_reached_threshold: 0.5   # 40% (매우 정밀한 도달 판정)
        overrides:
          max_linear_velocity: 0.0      # 전진 속도 0
          min_linear_velocity: -0.5     # 느린 후진 속도
          respect_reverse_heading: true
          
      5:  # 가속(빠르게 전진)
        description: "Fast forward movement"
        multipliers:
          max_linear_velocity: 1.25      # 130% (빠르게)
          goal_weight: 0.7              # 70% (덜 엄격하게)
          lookahead_base_distance: 1.0  # 100% (기본값 - 급격한 방향전환 방지)
          xy_goal_tolerance: 1.2        # 120% (관대하게)
          goal_reached_threshold: 1.3   # 130% (관대한 도달 판정)
        overrides:
          min_linear_velocity: 0.0
          
      6:  # 감속(느리게 전진)  
        description: "Slow forward movement"
        multipliers:
          max_linear_velocity: 0.3      # 30% (느리게)
          goal_weight: 1.3              # 130% (조금 더 정확하게)
          lookahead_base_distance: 0.6  # 60% (짧게)
          xy_goal_tolerance: 0.8        # 80% (조금 더 엄격하게)
        overrides:
          min_linear_velocity: 0.0
          
      7:  # 일시 정지(2초) - 이제 일반 전진과 동일한 파라미터 사용, pause는 SMPPI에서 처리
        description: "Normal forward movement (2s pause handled by SMPPI)"
        multipliers:
          goal_reached_threshold: 0.3
        overrides: {}
          
      8:  # 일시 정지(4초) - 이제 일반 전진과 동일한 파라미터 사용, pause는 SMPPI에서 처리
        description: "Normal forward movement (4s pause handled by SMPPI)"  
        multipliers:
          goal_reached_threshold: 0.3
        overrides: {}
          
      9:  # 가속 + 정지 준비
        description: "Fast forward movement"
        multipliers:
          max_linear_velocity: 1.25      # 130% (빠르게)
          goal_weight: 0.7              # 70% (덜 엄격하게)
          lookahead_base_distance: 1.0  # 100% (기본값 - 급격한 방향전환 방지)
          xy_goal_tolerance: 1.2        # 120% (관대하게)
          goal_reached_threshold: 1.3   # 130% (관대한 도달 판정)
        overrides:
          min_linear_velocity: 0.0
          
      10:  # 신호등 감지
        description: "Traffic light detection mode"
        multipliers: {}  # 모든 값 1.0 (기본값 사용)
        overrides: {}
          
      11:  # 차선 무시
        description: "Lane ignore mode"
        multipliers:
          max_linear_velocity: 0.8      # 80% (조금 느리게)
          goal_weight: 1.8              # 180% (목표에 집중)
          obstacle_weight: 0.8          # 80% (차선 장애물 덜 신경)
        overrides:
          min_linear_velocity: 0.0

    # SMPPI config 파일 경로 설정 (simple_behavior_planner 패키지 내부 파일 사용)
    smppi_config_path: "smppi_params.yaml"